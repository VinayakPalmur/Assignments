public static int[] implementMergeSort(int arr[], int start, int end)
    {
         
      if (start < end) 
      {

            int mid = (start + end) / 2;
            implementMergeSort(arr, start, mid);
             implementMergeSort(arr, mid + 1, end);
     
       
    int n1 = mid - start + 1;
    int n2 = end - mid;

    int L[] = new int[n1];
    int M[] = new int[n2];

    // fill the left and right array
    for (int i = 0; i < n1; i++)
      L[i] = arr[start + i];
    for (int j = 0; j < n2; j++)
      M[j] = arr[mid + 1 + j];

    // Maintain current index of sub-arrays and main array
    int i, j, k;
    i = 0;
    j = 0;
    k = start;

    
    while (i < n1 && j < n2) {
      if (L[i] <= M[j]) {
        arr[k] = L[i];
        i++;
      } else {
        arr[k] = M[j];
        j++;
      }
      k++;
    }

    
    while (i < n1) {
      arr[k] = L[i];
      i++;
      k++;
    }

    while (j < n2) {
      arr[k] = M[j];
      j++;
      k++;
    }
  }
  return  arr;
}
